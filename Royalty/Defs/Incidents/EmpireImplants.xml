<?xml version="1.0" encoding="utf-8" ?>
<Defs>
  <QuestScriptDef>
    <defName>EmpireImplants</defName>
    <rootSelectionWeight>0</rootSelectionWeight>
    <expireDaysRange>1</expireDaysRange>
    <questNameRules>
      <rulesStrings>
        <li>questName->Colonist Implanting</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <!-- Asker is faction leader -->
        <li>questDescription(asker_factionLeader==True)->[asker_faction_leaderTitle] [asker_nameFull] of [asker_faction_name] is willing to give your colonists protective implants.\n\n[asker_pronoun] is asking you to lend [asker_objective] [colonistCountToLend] for 1 day.\n\n[willSendShuttle]</li>

        <li>colonistCountToLend(colonistsToLendCount==1)->1 colonist</li>
        <li>colonistCountToLend(colonistsToLendCount>1)->[colonistsToLendCount] colonists</li>

        <li>willSendShuttle->[asker_pronoun] will send a shuttle to pick up the [colonists].</li>
        <li>colonists(colonistsToLendCount==1)->colonist</li>
        <li>colonists(colonistsToLendCount>1)->colonists</li>

        <li>pawnListHaveConjugation(colonistsToLendCount==1)->has</li>
        <li>pawnListHaveConjugation(colonistsToLendCount>1)->have</li>
      </rulesStrings>
    </questDescriptionRules>

    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_RandomNode">
          <nodes>
            <li Class="QuestNode_Sequence">
              <selectionWeight>0.5</selectionWeight>
              <nodes>
                <li Class="QuestNode_Set">
                  <name>returnLetterText</name>
                  <value TKey="LetterTextReturnAfterHelping">{PAWNS} [pawnListHaveConjugation] returned with protective implants. [asker_faction_name] is now more friendly.</value>
                </li>
              </nodes>
            </li>
          </nodes>
        </li>

        <!-- Shuttle -->
        <li Class="QuestNode_ShuttleDelay">
          <delayTicks>3500</delayTicks>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_GenerateShuttle">
                <storeAs>shuttle</storeAs>
                <requiredPawns>$requiredPawns</requiredPawns>
                <acceptColonists>true</acceptColonists>
                <onlyAcceptColonists>true</onlyAcceptColonists>
                <onlyAcceptHealthy>false</onlyAcceptHealthy>
                <dropEverythingIfUnsatisfied>true</dropEverythingIfUnsatisfied>
                <leaveImmediatelyWhenSatisfied>true</leaveImmediatelyWhenSatisfied>
                <requireColonistCount>$colonistsToLendCount</requireColonistCount>
              </li>
              <li Class="QuestNode_SpawnSkyfaller">
                <skyfallerDef>ShuttleIncoming</skyfallerDef>
                <innerThings>$shuttle</innerThings>
                <tryLandInShipLandingZone>True</tryLandInShipLandingZone>
                <lookForSafeSpot>True</lookForSafeSpot>
                <factionOfForSafeSpot>$asker</factionOfForSafeSpot>
              </li>
              <li Class="QuestNode_SendShuttleAwayOnCleanup">
                <shuttle>$shuttle</shuttle>
              </li>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleArrived">Shuttle arrived</label>
                <text TKey="LetterTextShuttleArrived">The shuttle has arrived to collect your colonists.</text>
                <lookTargets>$shuttle</lookTargets>
              </li>
              <li Class="QuestNode_ShuttleLeaveDelay">
                <delayTicks>$(60000)</delayTicks>
                <shuttle>$shuttle</shuttle>
                <inSignalsDisable>
                  <li>shuttle.Destroyed</li>
                  <li>shuttle.SentSatisfied</li>
                  <li>shuttle.SentUnsatisfied</li>
                </inSignalsDisable>
                <node Class="QuestNode_Sequence">
                  <nodes>
                    <li Class="QuestNode_SendShuttleAway">
                      <shuttle>$shuttle</shuttle>
                      <dropEverything>true</dropEverything>
                    </li>
                    <li Class="QuestNode_End">
                      <outcome>Fail</outcome>
                    </li>
                  </nodes>
                </node>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Shuttle destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleDestroyed">Shuttle destroyed</label>
                <text TKey="LetterTextShuttleDestroyed">The shuttle sent to collect colonists has been destroyed.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Shuttle sent away -->
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.SentSatisfied</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_LendColonistsToFaction">
                <shuttle>$shuttle</shuttle>
                <lendColonistsToFactionOf>$asker</lendColonistsToFactionOf>
                <returnLentColonistsInTicks>60000</returnLentColonistsInTicks>
                <outSignalComplete>ColonistsReturned</outSignalComplete>
              </li>
              <li Class="QuestNode_SendShuttleAway">
                <shuttle>$shuttle</shuttle>
              </li>
              <li Class="OldWorldGods.Quests.QuestNode_GiveImplants">
                <shuttle>$shuttle</shuttle>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>ColonistsReturned</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelColonistsReturned">Colonists returned</label>
                <text>$returnLetterText</text>
                <letterDef>PositiveEvent</letterDef>
              </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>shuttle.SentUnsatisfied</inSignal>
          <node Class="QuestNode_End">
            <outcome>Fail</outcome>
          </node>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
</Defs>